name: SalesforceCommerceCloud/pwa-kit/test
on:
  schedule:
    - cron: 0 8 * * *
  push:
     branches:
     # TODO: Before merging remove branches filter
     - github-actions
jobs:
  pwa-kit:
    strategy:
      fail-fast: false
      matrix:
        node: [14]
        npm: [6, 7, 8]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Save NPM version
        run: |-
            echo "NPM_VERSION=${{ matrix.npm }}" >> $GITHUB_ENV
        shell: bash

      - name: Setup Ubuntu Machine
        uses: "./.github/actions/setup_ubuntu"

      - name: Install node dependencies with NPM version
        if: matrix.npm != 6
        run: |- 
          npm install -g npm@${{ matrix.npm }}
          npm ci

      - name: NPM version
        run: npm --version

      - name: Run tests
        uses: "./.github/actions/runtests"

      - name: Run Lighthouse CI on the PWA
        if: matrix.npm == 6
        uses: "./.github/actions/lighthouse-ci"

      - name: Smoke test scripts
        if: matrix.npm == 6
        uses: "./.github/actions/smoketestscripts"

      - name: Create MRT credentials file
        if: github.repository == 'SalesforceCommerceCloud/pwa-kit' && matrix.npm == 6
        env:
          MOBIFY_CLIENT_USER: ${{ secrets.MOBIFY_CLIENT_USER }}
          MOBIFY_CLIENT_API_KEY: ${{ secrets.MOBIFY_CLIENT_API_KEY }}
        run: |-
          # Add credentials file at ~/.mobify so we can upload to Mobify Cloud
          npm run save-credentials --prefix packages/template-retail-react-app -- --user "$MOBIFY_CLIENT_USER" --key "$MOBIFY_CLIENT_API_KEY"
        shell: bash

      - name: Push Bundle to MRT
        if: github.repository == 'SalesforceCommerceCloud/pwa-kit' && matrix.npm == 6 
        #TODO: Change target 'test-env' to 'staging' and 'test-env-3' to 'commerce-sdk-react'
        run: |-
          if [[ $DEVELOP || $RELEASE ]]; then
            target=test-env
            target_commerce_sdk_react="test-env-3"
          elif [[ $RELEASE ]]; then
            target=production
          else
            target=""
          fi
          project="scaffold-pwa"
          if [[ $target ]]; then
            npm run push --prefix packages/template-retail-react-app -- -s $project --message "build ${{ github.run_id }} on ${{ github.ref }} (${{ github.sha }})" --target $target
          fi
          if [[ $target_commerce_sdk_react ]]; then
            npm run push --prefix packages/test-commerce-sdk-react -- -s $project --message "test-commerce-sdk-react build ${{ github.run_id }} on ${{ github.ref }} (${{ github.sha }})" --target $target_commerce_sdk_react
          fi
      #TODO: remove --dry-run from install command
      - name: Publish to NPM
        if: github.repository == 'SalesforceCommerceCloud/pwa-kit' && matrix.npm == 6
        env: 
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |-
          # Add NPM token to allow publishing
          echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" > ~/.npmrc

          if [[ $RELEASE ]]; then
            # Publish all changed packages. The "from-package" arg means "look
            # at the version numbers in each package.json file and if that doesn't
            # exist on NPM, publish"
            npm run lerna -- publish from-package --yes --no-verify-access --dry-run
          fi

          # Cleanup
          rm ~/.npmrc
      #TODO: change github-actions to develop
      - name: Send GitHub Action data to Slack workflow (PWA Kit)
        id: slack
        if: github.repository == 'SalesforceCommerceCloud/pwa-kit' && failure() && github.ref == 'refs/heads/github-actions' && matrix.npm == 6
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "test": "testNode${{ matrix.node }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  pwa-kit-windows:
    strategy:
        fail-fast: false
        matrix:
          node: [14]
          npm: [6]
    runs-on: windows-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Setup Node
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node }}
            cache: npm

        - name: Setup Windows Machine
          uses: "./.github/actions/setup_windows"

        - name: NPM version
          run: npm --version

        - name: Run tests
          uses: "./.github/actions/runtests"
      

  generated:
    strategy:
      fail-fast: false
      matrix:
        template: [test-project, retail-react-app-demo, express-minimal-test-project, typescript-minimal-test-project]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Setup Ubuntu Machine
        uses: "./.github/actions/setup_ubuntu"

      - name: Generate ${{ matrix.template }} project
        run: |-
          set GENERATOR_PRESET=${{ matrix.template }}
          node packages/pwa-kit-create-app/scripts/create-mobify-app-dev.js --outputDir generated-${{ matrix.template }}
        env:
          GENERATOR_PRESET: ${{ matrix.template }}
        timeout-minutes: 5

      - name: Run tests
        if: matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo'
        uses: "./.github/actions/runtests"
        with:
          cwd: generated-${{ matrix.template }}

      - name: Smoke test scripts
        if: matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo'
        uses: "./.github/actions/smoketestscripts"
        with:
          dir: generated-${{ matrix.template }}

      - name: Count Generated Project Dependencies
        if: matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo'
        run: |-
          MAX_PACKAGES="2260"
          total=$(./scripts/count-dependencies.js generated-${{ matrix.template }})
          echo "TOTAL_PACKAGES=${total}" >> $GITHUB_ENV

          if [ "$total" -gt "$MAX_PACKAGES" ]; then
              echo "Error: Found $TOTAL_PACKAGES installed packages (max $MAX_PACKAGES).";
              exit 1;
          else
              echo "Found $TOTAL_PACKAGES installed packages (max $MAX_PACKAGES).";
          fi
        shell: bash
      - name: Store Verdaccio logfile artifact
        uses: actions/upload-artifact@v3
        with:
          path: packages/pwa-kit-create-app/local-npm-repo/verdaccio.log
      - name: Send metrics to Datadog
        if: github.repository == 'SalesforceCommerceCloud/pwa-kit' && (matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo')
        run : |
          # Add a dogrc so we can submit metrics to datadog
          printf "[Connection]\napikey = $DATADOG_API_KEY\nappkey =\n" > ~/.dogrc

          dog metric post mobify_platform_sdks.generated_project_total_packages $TOTAL_PACKAGES
        env:
          DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      - name: Create MRT credentials file
        if: github.repository == 'SalesforceCommerceCloud/pwa-kit' && (matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo')
        env:
          MOBIFY_CLIENT_USER: ${{ secrets.MOBIFY_CLIENT_USER }}
          MOBIFY_CLIENT_API_KEY: ${{ secrets.MOBIFY_CLIENT_API_KEY }}
        run: |-
          # Add credentials file at ~/.mobify so we can upload to Mobify Cloud
          npm run save-credentials --prefix packages/template-retail-react-app -- --user "$MOBIFY_CLIENT_USER" --key "$MOBIFY_CLIENT_API_KEY"
        shell: bash
      - name: Push Bundle to MRT
        if: github.repository == 'SalesforceCommerceCloud/pwa-kit' && (matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo')
        run: |
          if [[ $DEVELOP ]]; then
            target='generated-pwa'
          else
            target=""
          fi

          project="scaffold-pwa"

          if [[ $target ]]; then
            cd generated-${{ matrix.template }}
            
            npm run push -- -s $project --message "Generated PWA build ${{ github.run_id }} on ${{ github.ref }} (${{ github.sha }})" --target $target
          fi
      - name: Send GitHub Action data to Slack workflow (Generated)
        id: slack
        if: github.repository == 'SalesforceCommerceCloud/pwa-kit' && failure() && github.ref == 'refs/heads/github-actions' && (matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo')
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "test": "generated ${{ matrix.template }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  generated-windows:
    strategy:
      fail-fast: false
      matrix:
        template: [test-project, retail-react-app-demo, express-minimal-test-project, typescript-minimal-test-project]
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Setup Windows Machine
        uses: "./.github/actions/setup_windows"

      - name: Generate ${{ matrix.template }} project
        run: |-
          set GENERATOR_PRESET=${{ matrix.template }}
          node packages/pwa-kit-create-app/scripts/create-mobify-app-dev.js --outputDir generated-${{ matrix.template }}
        env:
          GENERATOR_PRESET: ${{ matrix.template }}
        timeout-minutes: 5

      - name: Run tests
        if: matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo'
        uses: "./.github/actions/runtests"
        with:
          cwd: generated-${{ matrix.template }}

      - name: Smoke test scripts
        if: matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo'
        uses: "./.github/actions/smoketestscripts"
        with:
          dir: generated-${{ matrix.template }}

      - name: Count Generated Project Dependencies
        if: matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo'
        run: |-
          MAX_PACKAGES="2260"
          total=$(./scripts/count-dependencies.js generated-${{ matrix.template }})
          echo "TOTAL_PACKAGES=${total}" >> $GITHUB_ENV

          if [ "$total" -gt "$MAX_PACKAGES" ]; then
              echo "Error: Found $TOTAL_PACKAGES installed packages (max $MAX_PACKAGES).";
              exit 1;
          else
              echo "Found $TOTAL_PACKAGES installed packages (max $MAX_PACKAGES).";
          fi
        shell: bash
      - name: Store Verdaccio logfile artifact
        uses: actions/upload-artifact@v3
        with:
          path: packages/pwa-kit-create-app/local-npm-repo/verdaccio.log


