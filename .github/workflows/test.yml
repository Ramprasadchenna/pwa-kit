name: SalesforceCommerceCloud/pwa-kit/test
on:
  schedule:
    - cron: 0 8 * * *
  push:
  #    branches:
  #    # TODO: Before merging remove branches filter
  #    - github-actions
jobs:
  pwa-kit:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        node: [14]
        npm: [6, 7, 8]
        exclude:
          - os: windows-latest
            node: 14
            npm: 7
          - os: windows-latest
            node: 14
            npm: 8
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Save NPM version
        run: |-
            echo "NPM_VERSION=${{ matrix.npm }}" >> $GITHUB_ENV
        shell: bash

      - name: Setup Ubuntu Machine
        if: matrix.os == 'ubuntu-latest'
        uses: "./.github/actions/setup_ubuntu"

      - name: Setup Windows Machine
        if: matrix.os == 'windows-latest'
        uses: "./.github/actions/setup_windows"

      - name: Install node dependencies with NPM version
        if: matrix.npm != 6
        run: |- 
          npm install -g npm@${{ matrix.npm }}
          npm ci

      - name: NPM version
        run: npm --version

      - name: Run tests
        uses: "./.github/actions/runtests"

      - name: Run Lighthouse CI on the PWA
        if: matrix.os == 'ubuntu-latest' && matrix.npm == 6
        uses: "./.github/actions/lighthouse-ci"

      - name: Smoke test scripts
        if: matrix.os == 'ubuntu-latest' && matrix.npm == 6
        uses: "./.github/actions/smoketestscripts"

      - name: Store test results
        uses: actions/upload-artifact@v3
        with:
          path: packages/template-retail-react-app/tests/reports

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          path: packages/template-retail-react-app/tests/screenshots

  generated:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        template: [test-project, retail-react-app-demo, express-minimal-test-project, typescript-minimal-test-project]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Setup Ubuntu Machine
        if: matrix.os == 'ubuntu-latest'
        uses: "./.github/actions/setup_ubuntu"

      - name: Setup Windows Machine
        if: matrix.os == 'windows-latest'
        uses: "./.github/actions/setup_windows"

      - name: Generate ${{ matrix.template }} project
        run: |-
          set GENERATOR_PRESET=${{ matrix.template }}
          node packages/pwa-kit-create-app/scripts/create-mobify-app-dev.js --outputDir generated-${{ matrix.template }}
        env:
          GENERATOR_PRESET: ${{ matrix.template }}
        timeout-minutes: 5

      - name: Run tests
        if: matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo'
        uses: "./.github/actions/runtests"
        with:
          cwd: generated-${{ matrix.template }}

      - name: Smoke test scripts
        if: matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo'
        uses: "./.github/actions/smoketestscripts"
        with:
          dir: generated-${{ matrix.template }}

      - name: Count Generated Project Dependencies
        if: matrix.template == 'test-project' || matrix.template == 'retail-react-app-demo'
        run: |-
          MAX_PACKAGES="2250"
          total=$(./scripts/count-dependencies.js generated-${{ matrix.template }})
          echo "export TOTAL_PACKAGES=${total}" >> $BASH_ENV;
          source $BASH_ENV

          if [ "$total" -gt "$MAX_PACKAGES" ]; then
              echo "Error: Found $TOTAL_PACKAGES installed packages (max $MAX_PACKAGES).";
              exit 1;
          else
              echo "Found $TOTAL_PACKAGES installed packages (max $MAX_PACKAGES).";
          fi
        shell: bash

      - name: Store Verdaccio logfile artifact
        uses: actions/upload-artifact@v3
        with:
          path: packages/pwa-kit-create-app/local-npm-repo/verdaccio.log
